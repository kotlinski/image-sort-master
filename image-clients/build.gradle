apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.unbroken-dome.test-sets'

mainClassName = "se.kotlinski.imagesort.MainRenamer"

findbugs {
  toolVersion = "3.0.1"
}


buildscript {
  repositories {
	mavenCentral()
	jcenter()
  }

  dependencies {
	classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
	classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.0.2'
  }
}

testSets {
  integrationTest { dirName = 'integration-test' }
}

jacoco {
  toolVersion = "0.7.0.201403182114"
}
jacocoTestReport {
  reports {
	xml.enabled true
	csv.enabled true
	html.destination "${buildDir}/jacocoHtml"
  }
}

repositories {
  mavenCentral()
}

jar {
  manifest {
	attributes provider: 'gradle', 'Main-Class': 'se.kotlinski.imagesort.MainRenamer'
  }
}


buildscript {
  repositories {
	mavenCentral()
  }

}

sourceSets {
  main.java.srcDir('src/main/java')

  test.java.srcDir('src/test/java')
  test.resources.srcDir('src/resources')
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

project.integrationTest {
  outputs.upToDateWhen { false }
}

tasks.withType(Test) {
  reports.html.destination = file("${reporting.baseDir}/${name}")
}

dependencies {
  compile project(':image-sorter')
  compile 'com.adobe.xmp:xmpcore:5.1.1'
  compile 'commons-cli:commons-cli:20040117.000000'
  compile 'commons-io:commons-io:20030203.000550'
  compile 'com.drewnoakes:metadata-extractor:2.+'
  compile 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
  compile 'com.google.inject:guice:3.0'

  testCompile 'junit:junit:4.11'
  testCompile 'org.mockito:mockito-all:1.10.8'

  integrationTestCompile 'junit:junit:4.11'
  integrationTestCompile 'org.mockito:mockito-all:1.10.8'
}


task wrapper(type: Wrapper) {
  gradleVersion = '2.0'
}
