apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.unbroken-dome.test-sets'
apply from: 'http://dl.bintray.com/content/shemnon/javafx-gradle/8.1.1/javafx.plugin'

mainClassName = "se.kotlinski.imagesort.MainRenamer"

findbugs {
  toolVersion = "3.0.1"
}

buildscript {
  repositories {
	mavenCentral()
	jcenter()
  }

  dependencies {
	classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
	classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.0.2'
	classpath 'ca.cutterslade.gradle:gradle-dependency-analyze:1.0.3'
  }
}

apply plugin: 'ca.cutterslade.analyze'

analyzeClassesDependencies {
  justWarn = true
}

javafx {

  appName = 'Image Sorter'
  mainClass = 'se.kotlinski.imagesort.MainRenamer'
  version = '4.0.0'
  licenseType = 'Apache License Version 2.0'
  vendor = 'Simon Kotlinski'

  jvmArgs = []

  profiles {
/*	windows {
	  appID = 'b533f663-1efd-489f-b910-4c7ec20c7fd0'
	}*/

/*	macosx {
	  category = 'public.app-category.developer-tools'
	  id = 'com.shemnon.java.javafx.ensemble8'
	}*/
  }

  icons {
	shortcut = [
			'icon_16x16.png', 'icon_16x16@2x.png',
			'icon_32x32.png', 'icon_32x32@2x.png',
			'icon_128x128.png', 'icon_128x128@2x.png',
			'icon_256x256.png', 'icon_256x256@2x.png',
			'icon_512x512.png', 'icon_512x512@2x.png'
	]
	volume = shortcut
	setup = shortcut
  }

  verbose = true
}

jacoco {
  toolVersion = "0.7.0.201403182114"
}
jacocoTestReport {
  reports {
	xml.enabled true
	csv.enabled true
	html.destination "${buildDir}/jacocoHtml"
  }
}

jar {
  manifest {
	attributes provider: 'gradle', 'Main-Class': 'se.kotlinski.imagesort.MainRenamer'
  }
  exclude('simplelogger.properties')
}

testSets {
  integrationTest { dirName = 'integration-test' }
}

sourceSets {
  main.java.srcDir('src/main/java')

  test.java.srcDir('src/test/java')
  test.resources.srcDir('src/resources')
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

project.integrationTest {
  outputs.upToDateWhen { false }
}

tasks.withType(Test) {
  reports.html.destination = file("${reporting.baseDir}/${name}")
}

tasks.withType(FindBugs) {
  reports {
	xml.enabled = false
	html.enabled = true
  }
}

dependencies {
  compile project(':image-sorter')
  compile 'commons-cli:commons-cli:20040117.000000'
  compile 'com.google.inject:guice:4.0'
  compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
  compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'

  compile 'com.mixpanel:mixpanel-java:1.4.3'

  testCompile 'org.hamcrest:hamcrest-core:1.3'
  integrationTestCompile 'org.hamcrest:hamcrest-core:1.3'

  testCompile 'org.mockito:mockito-core:1.10.8'
  integrationTestCompile 'org.mockito:mockito-core:1.10.8'

  testCompile 'junit:junit:4.11'
  integrationTestCompile 'junit:junit:4.11'
}


task wrapper(type: Wrapper) {
  gradleVersion = '2.0'
}
